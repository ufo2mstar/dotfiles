require('querystring')
require('query-string')
require 'query-string'
a="{} contains "
a
['a'].includes(null)
['a'].includes('a')
[].includes('a')
[].contains('a')
{...{}}
{...null}
{...undefined}
{undefined}
{...undefined}
p={...n,...o}
o={}
p={...n,...o}
l={...n,...m}
k={...m,...n}
k={...m,...n}}
n={a:2,b:4}
m = {a:1}
n
m
a
a = new URL('tphello.')
a = new URL('tphello:')
a = new URL('tphello')
a = new URL('tp:hello')
a = new URL('tp:hello.com')
a = new URL('ftphello.com')
a = new URL('ftp:hello.com')
a = new URL('ftp:/hello.com')
a = new URL('ftp://hello.com')
a = new URL('http://hello.com')
a = new URL('http:\\hello.com')
a = new URL('sdf')
a = new URL('')
a = new URL()
new URL()
.exit
30*60*1e3
1e3
120*60*1e3
if(' ') 5
if('') 5
new Date(1581895782000)
new Date(158189578200)
new Date(1581895782)
new Date(new Date('04/12/2012 07:00').getTime() + 15000)
new Date('04/12/2012 07:00').getTime() + 15000
new Date('04/12/2012 07:00').getTime() + 15
new Date('04/12/2012 07:00').getTime()
new Date('04/12/2012 07:00')
~new Date('04/12/2012 07:00')~
.exit
Object.keys(a)
a.keys
a.b.key
a.b.name
a.b
a={b:3}
67%5
14%5
15%5
14
4%5
6%5
run2(0,0)
run2(1,1)
run2(0,1)
run2(1,0)
function run2(a,b){return (a==b)}
run2(0,0)
run2(0,1)
run2(1,1)
run2(1,0)
function run2(a,b){return !(a==b)}
run2(0,1)
run2(0,0)
run2(1,1)
run2(1,0)
run2(true,true)
function run2(a,b){return !(a !=b)}
b
a
!(a!=b)
a!=b
a==b
5%3
isEven(0)
isEven(-2)
isEven(-1)
function isEven(n){return n%2 === 0}
0%2
~
}
    return (!isEven(x1%v1) != !isEven(x2%v2))? 'YES': 'NO'
function kangaroo(x1, v1, x2, v2) {
// Complete the kangaroo function below.
~function isEven(n){return n%2 === 0}
run(true,true)
run(true,true))
run(false,false)
run(true,false)
function run(a,b){return !a != !b}
run(true,false)
function run(a,b){!a != !b}
}
function run(a,b){
a=true;b=false
0=='0'
-0===0
-0====0
-0===0
-0==0
-6%2
-5%2
5%2
.exit
c=require('../build/dist/bundle')
.exit
c=require('../build/dist/bundle')
.exit
c=require('../build/dist/bundle')
.exit
c=require('../build/dist/bundle')
b=require('../build/dist/bundle')
a();
b=require('../build/dist/bundle')
a();
b=require('../build/dist/bundle')
a();
b=require('../build/dist/bundle')
a();
b=require('../build/dist/bundle')
a();
}
  ]
    }
      }
        "Message": "{\"notificationTime\":1575995542519,\"routeMetadata\":null,\"externalReferenceId\":\"111-1234567-7654321\",\"transportGroupId\":\"group-f4b1e875-b492-1233-e6eb-968ca0588785\",\"trAssignmentChange\":{\"trId\":\"tr-1ab2c33d-1234-5678-90zz-12a3b45c6def\",\"assignmentStatus\":\"ACCEPTED\",\"transporterDetails\":[{\"recordedTime\":1528225461285,\"transporterId\":\"ABCD12345EFGH\"}],\"assignmentContext\":null,\"assignmentStatusTimestamp\":1528225461285},\"previousAssignmentStatus\":{\"trId\":\"tr-1ab2c33d-1234-5678-90zz-12a3b45c6def\",\"assignmentStatus\":\"ACCEPTED\",\"transporterDetails\":[{\"recordedTime\":1528225239394,\"transporterId\":\"ABCD12345EFGH\"}],\"assignmentContext\":null,\"assignmentStatusTimestamp\":1528225239394},\"updateReason\":\"NONE\",\"operator\":null,\"clientId\":\"ATREX\",\"updateSourceClientName\":\"FlexItineraryProviderService\",\"scannableId\":\"U53DDHH0DH5G6SPBW0G1\"}"
        },
          }
            "Value": "TestBinary"
            "Type": "Binary",
          "TestBinary": {
          },
            "Value": "TestString"
            "Type": "String",
          "Test": {
        "MessageAttributes": {
        "UnsubscribeUrl": "EXAMPLE",
        "SigningCertUrl": "EXAMPLE",
        "Signature": "EXAMPLE",
        "SignatureVersion": "1",
        "Timestamp": "1970-01-01T00:00:00.000Z",
        "Subject": "example subject",
        "TopicArn": "arn:aws:sns:us-east-1:123456789012:ExampleTopic",
        "MessageId": "95df01b4-ee98-5cb9-9903-4c221d41eb5e",
        "Type": "Notification",
      "Sns": {
      "EventSubscriptionArn": "arn:aws:sns:us-east-1:{{{accountId}}}:ExampleTopic",
      "EventVersion": "1.0",
      "EventSource": "aws:sns",
    {
  "Records": [
e = {
a=async ()=> await b.tacHandler(e) 
b = require('./index')
b = require('index')
.exit
a()
}
  ]
    }
      }
        "Message": "{\"notificationTime\":1575995542519,\"routeMetadata\":null,\"externalReferenceId\":\"111-1234567-7654321\",\"transportGroupId\":\"group-f4b1e875-b492-1233-e6eb-968ca0588785\",\"trAssignmentChange\":{\"trId\":\"tr-1ab2c33d-1234-5678-90zz-12a3b45c6def\",\"assignmentStatus\":\"ACCEPTED\",\"transporterDetails\":[{\"recordedTime\":1528225461285,\"transporterId\":\"ABCD12345EFGH\"}],\"assignmentContext\":null,\"assignmentStatusTimestamp\":1528225461285},\"previousAssignmentStatus\":{\"trId\":\"tr-1ab2c33d-1234-5678-90zz-12a3b45c6def\",\"assignmentStatus\":\"ACCEPTED\",\"transporterDetails\":[{\"recordedTime\":1528225239394,\"transporterId\":\"ABCD12345EFGH\"}],\"assignmentContext\":null,\"assignmentStatusTimestamp\":1528225239394},\"updateReason\":\"NONE\",\"operator\":null,\"clientId\":\"ATREX\",\"updateSourceClientName\":\"FlexItineraryProviderService\",\"scannableId\":\"U53DDHH0DH5G6SPBW0G1\"}"
        },
          }
            "Value": "TestBinary"
            "Type": "Binary",
          "TestBinary": {
          },
            "Value": "TestString"
            "Type": "String",
          "Test": {
        "MessageAttributes": {
        "UnsubscribeUrl": "EXAMPLE",
        "SigningCertUrl": "EXAMPLE",
        "Signature": "EXAMPLE",
        "SignatureVersion": "1",
        "Timestamp": "1970-01-01T00:00:00.000Z",
        "Subject": "example subject",
        "TopicArn": "arn:aws:sns:us-east-1:123456789012:ExampleTopic",
        "MessageId": "95df01b4-ee98-5cb9-9903-4c221d41eb5e",
        "Type": "Notification",
      "Sns": {
      "EventSubscriptionArn": "arn:aws:sns:us-east-1:{{{accountId}}}:ExampleTopic",
      "EventVersion": "1.0",
      "EventSource": "aws:sns",
    {
  "Records": [
eve = {
console.log(a)
a
a()
}
  ]
    }
      "body": "{\"timestamp\": 1575995542519,\"grokEntityId\": \"tr-1ab2c33d-1234-5678-90zz-12a3b45c6def\",\"grokEntityType\": \"TRANSPORT_REQUEST_ID\",\"queryEntityId\": \"ACP12345DSP\",\"queryEntityType\": \"TRANSPORTER\"}"
      "awsRegion": "us-east-1",
      "eventSourceARN": "arn:aws:sqs:us-east-1:123456789012:MyQueue",
      "eventSource": "aws:sqs",
      "md5OfBody": "7b270e59b47ff90a553787216d55d91d",
      "messageAttributes": {},
      },
        "ApproximateFirstReceiveTimestamp": "1523232000001"
        "SenderId": "123456789012",
        "SentTimestamp": "1523232000000",
        "ApproximateReceiveCount": "1",
      "attributes": {
      "receiptHandle": "MessageReceiptHandle",
      "messageId": "19dd0b57-b21e-4ac1-bd88-01bbb068cb78",
    {
  "Records": [
eve = {
await a()
a()
async function a(){return await bundle.tacHandler(eve)}
await bundle.tacHandler(eve)
bundle.tacHandler(eve)
eve
}
  ]
    }
      }
        "Message": "{\"notificationTime\":1575995542519,\"routeMetadata\":null,\"externalReferenceId\":\"111-1234567-7654321\",\"transportGroupId\":\"group-f4b1e875-b492-1233-e6eb-968ca0588785\",\"trAssignmentChange\":{\"trId\":\"tr-1ab2c33d-1234-5678-90zz-12a3b45c6def\",\"assignmentStatus\":\"ASSIGNED\",\"transporterDetails\":[{\"recordedTime\":1528225461285,\"transporterId\":\"ABCD12345EFGH\"}],\"assignmentContext\":null,\"assignmentStatusTimestamp\":1528225461285},\"previousAssignmentStatus\":{\"trId\":\"tr-1ab2c33d-1234-5678-90zz-12a3b45c6def\",\"assignmentStatus\":\"ACCEPTED\",\"transporterDetails\":[{\"recordedTime\":1528225239394,\"transporterId\":\"ABCD12345EFGH\"}],\"assignmentContext\":null,\"assignmentStatusTimestamp\":1528225239394},\"updateReason\":\"NONE\",\"operator\":null,\"clientId\":\"ATREX\",\"updateSourceClientName\":\"FlexItineraryProviderService\",\"scannableId\":\"U53DDHH0DH5G6SPBW0G1\"}"
        },
          }
            "Value": "TestBinary"
            "Type": "Binary",
          "TestBinary": {
          },
            "Value": "TestString"
            "Type": "String",
          "Test": {
        "MessageAttributes": {
        "UnsubscribeUrl": "EXAMPLE",
        "SigningCertUrl": "EXAMPLE",
        "Signature": "EXAMPLE",
        "SignatureVersion": "1",
        "Timestamp": "1970-01-01T00:00:00.000Z",
        "Subject": "example subject",
        "TopicArn": "arn:aws:sns:us-east-1:123456789012:ExampleTopic",
        "MessageId": "95df01b4-ee98-5cb9-9903-4c221d41eb5e",
        "Type": "Notification",
      "Sns": {
      "EventSubscriptionArn": "arn:aws:sns:us-east-1:{{{accountId}}}:ExampleTopic",
      "EventVersion": "1.0",
      "EventSource": "aws:sns",
    {
  "Records": [
let eve = {
bundle = require('./index');
bundle = require('index');
let a: string;
m().format('MMMM Do YYYY, h:mm:ss a')
moment().format('MMMM Do YYYY, h:mm:ss a')
moment().format('MMMM Do YYYY, h:mm:ss a')moment().format('MMMM Do YYYY, h:mm:ss a')
m()
m
m = require('moment')
moment()
require('moment')
.exit
~
startAsync(text => console.log(text));~
};
  callback('To Async Await Using TypeScript');
  await wait(1000);
  callback('And Welcome');
  await wait(1000);
  callback('Hello');
  await wait(1000);
~const startAsync = async callback => {
startAsync(text => console.log(text));
};
  callback('To Async Await Using TypeScript');
  await wait(1000);
  callback('And Welcome');
  await wait(1000);
  callback('Hello');
  await wait(1000);
const startAsync = async callback => {
.exit
JSON.parse('null')
JSON.decode('null')
JSON.stringify(null)
.exit
}
  'error',
  'warn',
  'info',
  'debug',
  'silly' = 1,
enum LogLevel {
bun.default()
bun.default
bun()
bun
let bun = require('./src/bundle');
bn.transporterAssignmentChangeHandler
bn.transporterAssignmentChangeHandler()
bn.transporterAssignmentChangeHandler
bn.methods
bn.methods()
let bn = require('./bundle');
let b = require('./bundle');
b
const b = require('./bundle');
const b = require('bundle');
.exit
})
  "scannableId": "U53DDHH0DH5G6SPBW0G1"
  "updateSourceClientName": "FlexItineraryProviderService",
  "clientId": "ATREX",
  "operator": null,
  "updateReason": "NONE",
  },
    "assignmentStatusTimestamp": 1528225239394
    "assignmentContext": null,
    ],
      }
        "transporterId": "ACP2S5WE8V9JK"
        "recordedTime": 1528225239394,
      {
    "transporterDetails": [
    "assignmentStatus": "ACCEPTED",
    "trId": "tr-3cb1e88e-4750-0647-69aa-30b9e67a7ceb",
  "previousAssignmentStatus": {
  },
    "assignmentStatusTimestamp": 1528225461285
    "assignmentContext": null,
    ],
      }
        "transporterId": "ACP2S5WE8V9JK"
        "recordedTime": 1528225461285,
      {
    "transporterDetails": [
    "assignmentStatus": "ASSIGNED",
    "trId": "tr-3cb1e88e-4750-0647-69aa-30b9e67a7ceb",
  "trAssignmentChange": {
  "transportGroupId": "group-f4b1e875-b492-1233-e6eb-968ca0588785",
  "externalReferenceId": "113-5055351-1274654",
  "routeMetadata": null,
  "notificationTime": 1575995542519,
JSON.stringify({
.exit
import { handler } from './src/index'
import {handler} from './src/index'
.exit
exit()
a
a=5
quit()
quit
exit
which node
quit
exit
a
a=5